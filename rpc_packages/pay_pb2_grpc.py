# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from rpc_packages import pay_pb2 as pay__pb2


class PayRpcServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.wxUnified = channel.unary_unary(
                '/pay_service.PayRpcService/wxUnified',
                request_serializer=pay__pb2.wxUnifiedRequest.SerializeToString,
                response_deserializer=pay__pb2.wxUnifiedResponse.FromString,
                )
        self.registerUnified = channel.unary_unary(
                '/pay_service.PayRpcService/registerUnified',
                request_serializer=pay__pb2.registerUnifiedRequest.SerializeToString,
                response_deserializer=pay__pb2.registerUnifiedResponse.FromString,
                )


class PayRpcServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def wxUnified(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def registerUnified(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PayRpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'wxUnified': grpc.unary_unary_rpc_method_handler(
                    servicer.wxUnified,
                    request_deserializer=pay__pb2.wxUnifiedRequest.FromString,
                    response_serializer=pay__pb2.wxUnifiedResponse.SerializeToString,
            ),
            'registerUnified': grpc.unary_unary_rpc_method_handler(
                    servicer.registerUnified,
                    request_deserializer=pay__pb2.registerUnifiedRequest.FromString,
                    response_serializer=pay__pb2.registerUnifiedResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pay_service.PayRpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PayRpcService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def wxUnified(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pay_service.PayRpcService/wxUnified',
            pay__pb2.wxUnifiedRequest.SerializeToString,
            pay__pb2.wxUnifiedResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def registerUnified(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pay_service.PayRpcService/registerUnified',
            pay__pb2.registerUnifiedRequest.SerializeToString,
            pay__pb2.registerUnifiedResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
